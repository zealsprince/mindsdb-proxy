events {}

http {
    # HTTP server - redirects to HTTPS or serves directly based on ENABLE_HTTPS
    server {
        listen 80;
        server_name _;
        
        # If HTTPS is enabled, redirect to HTTPS
        location / {
            if ($http_x_forwarded_proto != "https") {
                return 301 https://$host$request_uri;
            }
            
            proxy_pass http://localhost:47334;
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/auth/.htpasswd;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTPS server - only active when SSL certificates are present
    server {
        listen 443 ssl;
        server_name _;
        
        # SSL certificate paths (will be populated by Let's Encrypt)
        ssl_certificate /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/privkey.pem;
        
        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_dhparam /etc/ssl/certs/dhparam.pem;
        
        location / {
            proxy_pass http://localhost:47334;
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/auth/.htpasswd;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}

